name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      NODE_ENV: test
      DATABASE_URL: mysql://user:password@localhost:3306/mydb
      NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

    steps:
      - name: 📥 Checkout du dépôt
        uses: actions/checkout@v4

      - name: ⚙️ Configuration de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci --legacy-peer-deps

      - name: 🔍 Lint des projets affectés
        run: npx nx affected --target=lint

      - name: 🧪 Tests unitaires
        run: npx nx affected --target=test

      - name: 🏗️ Build Angular + API
        run: |
          npx nx build angular --configuration production
          npx nx build api

      - name: 📈 Couverture de test
        run: npx nx affected --target=test --coverage

      - name: 📊 Génération du graphe de dépendances
        run: npx nx dep-graph --file=dist/graph.html

      - name: 🐳 Build des images Docker Angular + NestJS
        run: |
          docker build -f apps/angular/Dockerfile -t angular-app .
          docker build -f apps/api/Dockerfile -t nestjs-app .

      - name: 🗂️ Upload artefacts de build Angular
        uses: actions/upload-artifact@v4
        with:
          name: angular-dist
          path: dist/apps/angular/browser

      - name: 🗂️ Upload artefacts du graphe de dépendances
        uses: actions/upload-artifact@v4
        with:
          name: nx-dep-graph
          path: dist/graph.html

      - name: ✅ Résumé
        run: |
          echo "## Résumé CI" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Lint OK" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Tests OK" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Builds OK" >> $GITHUB_STEP_SUMMARY
          echo "- 🐳 Images Docker créées" >> $GITHUB_STEP_SUMMARY

      - name: 💬 Commentaire dans la PR
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ CI réussie
            - Lint ✔️
            - Tests ✔️
            - Builds ✔️
            - Docker ✔️
            - [Graphe des dépendances](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

