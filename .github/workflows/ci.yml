name: CI/CD - Build Angular & NestJS with MySQL (using .env)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]



jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypass
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: mysql://myuser:mypass@localhost:3307/mydb
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypass
      TZ: UTC

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧱 Build Angular App
        run: npx nx build angular --configuration=production

      - name: 🐳 Build Angular Docker Image
        run: |
          docker build \
            -f apps/angular/Dockerfile \
            -t my-angular-app:ci .

      - name: 🧱 Build NestJS API
        run: npx nx build api

      - name: 🐳 Build NestJS Docker Image
        run: |
          docker build \
            -f apps/api/Dockerfile \
            -t my-nestjs-app:ci .

      - name: 🐳 Build Prisma Studio Image
        run: |
          docker build \
            -f apps/api/Dockerfile \
            -t prisma-studio:ci .

      - name: 🐳 Run phpMyAdmin (test container)
        run: |
          docker run -d \
            --name phpmyadmin-ci \
            --link mysql:db \
            -e PMA_HOST=localhost \
            -e MYSQL_ROOT_PASSWORD=root \
            -p 8081:80 \
            phpmyadmin/phpmyadmin

      - name: 🧪 Optional Test Step (example)
        run: echo "✅ Build complete. Ready for deploy or further testing."

      - name: 🧹 Cleanup Docker (optional)
        if: always()
        run: docker rm -f $(docker ps -aq) || true


      # (Optionnel) Login + Push vers Docker Hub
      # - name: 🔑 Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: 📤 Push Angular Image
      #   run: docker tag my-angular-app:ci yourdockerhubuser/angular-app:latest && docker push yourdockerhubuser/angular-app:latest

      # - name: 📤 Push NestJS Image
      #   run: docker tag my-nestjs-app:ci yourdockerhubuser/nestjs-app:latest && docker push yourdockerhubuser/nestjs-app:latest

      # - name: 📤 Push Prisma Studio Image
      #   run: docker tag prisma-studio:ci yourdockerhubuser/prisma-studio:latest && docker push yourdockerhubuser/prisma-studio:latest

      # - name: 📤 Push phpMyAdmin Image
      #   run: docker tag phpmyadmin:ci yourdockerhubuser/phpmyadmin:latest && docker push yourdockerhubuser/phpmyadmin:latest
