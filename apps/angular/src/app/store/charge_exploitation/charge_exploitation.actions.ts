import { createAction, props } from '@ngrx/store'
import { IChargeExploitation } from '../../interfaces/exploitation.interface'

/**
 * Préfixe pour toutes les actions liées aux charges d'exploitation
 */
const prefix = '[ChargeExploitations]'

/**
 * Actions pour la récupération d'une charge d'exploitation spécifique
 */
export const getChargeExploitation = createAction(
  `${prefix} Get Single ChargeExploitation`,
  props<{ id: number }>(),
)

export const getChargeExploitationSuccess = createAction(
  `${getChargeExploitation.type} Success`,
  props<{ oneChargeExploitation: IChargeExploitation }>(),
)

/**
 * Actions pour la récupération de toutes les charges d'exploitation
 */
export const getChargeExploitations = createAction(
  `${prefix} Get All ChargeExploitations`,
)

export const getChargeExploitationsSuccess = createAction(
  `${getChargeExploitations.type} Success`,
  props<{ chargeExploitations: IChargeExploitation[] }>(),
)

/**
 * Actions pour la création d'une nouvelle charge d'exploitation
 */
export const createChargeExploitation = createAction(
  `${prefix} Create ChargeExploitation`,
  props<{ chargeExploitation: IChargeExploitation }>(),
)

export const createChargeExploitationSuccess = createAction(
  `${createChargeExploitation.type} Success`,
  props<{ chargeExploitation: IChargeExploitation }>(),
)

/**
 * Actions pour la mise à jour d'une charge d'exploitation existante
 */
export const updateChargeExploitation = createAction(
  `${prefix} Update ChargeExploitation`,
  props<{ chargeExploitation: IChargeExploitation }>(),
)

export const updateChargeExploitationSuccess = createAction(
  `${updateChargeExploitation.type} Success`,
  props<{ chargeExploitation: IChargeExploitation }>(),
)

/**
 * Actions pour la suppression d'une charge d'exploitation
 */
export const deleteChargeExploitation = createAction(
  `${prefix} Delete ChargeExploitation`,
  props<{ chargeExploitation: IChargeExploitation }>(),
)

export const deleteChargeExploitationSuccess = createAction(
  `${deleteChargeExploitation.type} Success`,
  props<{ chargeExploitation: IChargeExploitation }>(),
)
