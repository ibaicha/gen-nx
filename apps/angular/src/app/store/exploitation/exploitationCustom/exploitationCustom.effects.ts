import { Injectable } from '@angular/core'
import { Actions, createEffect, ofType } from '@ngrx/effects'
import { map, switchMap } from 'rxjs/operators'
import * as fromExploitationCustoms from './index'
import { ExploitationService } from '../../../services/exploitation.service'
import { IExploitationCustom } from '../../../interfaces/exploitation.interface'

/**
 * Effets pour la gestion des exploitations personnalisées
 * Gère les effets secondaires des actions liées aux exploitations personnalisées
 */
@Injectable()
export class ExploitationCustomEffects {
  constructor(
    private readonly actions$: Actions,
    private readonly exploitationService: ExploitationService,
  ) {}

  /**
   * Effet pour récupérer toutes les exploitations personnalisées
   * Déclenché par l'action getExploitationCustoms
   */
  getExploitationCustoms$ = createEffect(() =>
    this.actions$.pipe(
      // Filtre les actions de type getExploitationCustoms
      ofType(fromExploitationCustoms.getExploitationCustoms.type),
      // Appelle le service pour récupérer les données
      switchMap(() => this.exploitationService.getAllCustom()),
      // Transforme la réponse en action success
      map((exploitationCustoms: IExploitationCustom[]) =>
        fromExploitationCustoms.getExploitationCustomsSuccess({
          exploitationCustoms,
        }),
      ),
    ),
  )
}
