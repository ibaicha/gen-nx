import { Injectable } from '@angular/core'
import { AppService } from './app.service'
import { HttpClient, HttpHeaders } from '@angular/common/http'
import { Observable, of } from 'rxjs'
import { IExploitation } from '@shared-models'

@Injectable({
  providedIn: 'root',
})
export class ExploitationService {
  ExploitationDialogTitre = ''
  newExploitation: any = {}
  editedExploitation: any = {}
  deletedExploitation: any = {}
  //exploitations: IExploitation[] = [];
  exploitations = []

  option = {}
  constructor(public http: HttpClient, private appService: AppService) {
    this.option = {
      headers: new HttpHeaders({
        'Content-Type': 'application/json',
        Authorization: 'Bearer ' + this.appService.getLocalToken(),
      }),
    }
  }

  getExploitation(id: number): Observable<any> {
    return this.http.get(
      this.appService.getUrl('/exploitations/' + id),
      this.option,
    )
  }

  getExploitations(): Observable<any> {
    return this.http.get(this.appService.getUrl('/exploitations'), this.option)
  }

  getAllCustomExploitationToOp(id: number): Observable<any> {
    return this.http.get(
      this.appService.getUrl('/exploitations/custom/clientId/' + id),
      this.option,
    )
  }

  getAllCustom(): Observable<any> {
    return this.http.get(
      this.appService.getUrl('/exploitations/custom/'),
      this.option,
    )
  }
  create(exploitation: IExploitation): Observable<any> {
    const body: any = {}
    console.log(exploitation)
    body.id = null
    body.compte = exploitation.compte
    body.dateExploitation = exploitation.date
    body.unite = exploitation.unite
    body.surface = exploitation.surface
    body.varieteId = exploitation.variete ? exploitation.variete.id : null
    body.anneeId = exploitation.annee?.id ?? null
    body.saisonId = exploitation.saison?.id ?? null
    body.opId = exploitation.op?.id ?? null

    return this.http.post(
      this.appService.getUrl('/exploitations/create'),
      body,
      this.option,
    )
  }
  update(exploitation: IExploitation): Observable<any> {
    const body: any = {}
    body.id = exploitation.id
    body.compte = exploitation.compte
    body.date = exploitation.date
    body.unite = exploitation.unite
    body.surface = exploitation.surface
    //body.isAchat = exploitation.isAchat ;
    body.varieteId = exploitation.varieteId
    body.anneeId = exploitation.anneeId
    body.saisonId = exploitation.saisonId
    //body.producteurId = exploitation.producteurId
    body.opId = exploitation.opId

    return this.http.put(
      this.appService.getUrl('/exploitations/update/' + exploitation.id),
      body,
      this.option,
    )
  }

  delete(exploitation: IExploitation): Observable<any> {
    return this.http.delete(
      this.appService.getUrl('/exploitations/delete/' + exploitation.id),
      this.option,
    )
  }
}
