services:
  mysql-db:
    container_name: mysql-db
    image: mysql:8.0
    platform: linux/amd64
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    ports:
      - '3307:${MYSQL_PORT}'
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  nestjs-app:
    container_name: nestjs-app
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    depends_on:
      - mysql-db
    restart: unless-stopped
    env_file:
      - ./apps/api/.env
    ports:
      - '3000:3000' # Expos√© pour Nginx
    volumes:
      - ./apps/api:/usr/src/app
      - /usr/src/app/node_modules
      - migrations:/usr/src/app/.migrations
    networks:
      - app-network
    stdin_open: true
    tty: true
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  angular-app:
    container_name: angular-app
    build:
      context: .
      dockerfile: ./apps/angular/Dockerfile
    depends_on:
      - nestjs-app
    restart: always
    ports:
      - '80:80'
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/index.html']

      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    platform: linux/amd64
    depends_on:
      - mysql-db
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

    ports:
      - '8081:80'
    networks:
      - app-network

  prisma-studio:
    container_name: prisma-studio
    build:
      context: .
      dockerfile: ./apps/outils/Dockerfile
    restart: unless-stopped
    command:
      [
        'npx',
        'prisma',
        'studio',
        '--port',
        '5555',
        '--schema=./prisma/schema.prisma',
      ]
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - '5555:5555'
    networks:
      - app-network

  nginx:
    container_name: nginx-proxy

    build:
      context: .
      dockerfile: ./apps/nginx/Dockerfile

    depends_on:
      - angular-app
      - nestjs-app
    restart: unless-stopped
    ports:
      - '8080:80'

    networks:
      - app-network

    volumes:
      - ./html:/usr/share/nginx/html

volumes:
  db_data:
  migrations:

networks:
  app-network:
    name: angular-project-network # Nom explicite
    driver: bridge
